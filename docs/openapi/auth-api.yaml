google-auth:
  parameters:
  - $ref: './parameters.yaml#/siteId'
  get:
    tags:
      - auth
    summary: Authenticate with Google
    description: |
      This endpoint is used to authenticate with Google.
      The user will be redirected to the Google authentication flow.
    operationId: googleAuth
    responses:
      '200':
        description: Successful operation and token has been saved
      '302':
        description: Redirect to Google authentication flow
      '400':
        description: Missing or invalid parameters
      '404':
        description: Site matching site found in Google Search Console
      '500':
        $ref: './responses.yaml#/500'
    security: []

google-auth-status:
  parameters:
    - $ref: './parameters.yaml#/siteId'
  get:
    tags:
      - auth
    summary: Check Google Search Console authentication status for a site
    description: |
      This endpoint is used to check if a site is connected to Google Search Console and verify authentication status.
    operationId: googleAuthStatus
    responses:
      '200':
        description: Site is successfully connected to Google Search Console
        content:
          application/json:
            schema:
              type: object
              properties:
                status:
                  type: string
                  description: The GSC connection status of the site
                  example: "Site is connected to Google Search Console"
      '400':
        description: Missing or invalid parameters
      '404':
        description: Authentication tokens not found or Site not found in Google Search Console
      '500':
        $ref: './responses.yaml#/500'
    security: []
login:
  post:
    summary: Authenticate with access token
    description: |
      Authenticates a user using an IMS access token and returns session information.
    operationId: login
    tags:
      - auth
    requestBody:
      required: true
      content:
        application/json:
          schema:
            type: object
            required:
              - accessToken
            properties:
              accessToken:
                type: string
                description: The access token to authenticate with
    responses:
      '200':
        description: Login successful
        content:
          application/json:
            schema:
              type: object
              properties:
                sessionToken:
                  type: string
                  description: A JWT token signed by the service containing the user profile and tenants.
      '401':
        description: Authentication failed
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message
                  example: "Invalid access token"

      '403':
        description: Forbidden
        content:
          application/json:
            schema:
              type: object
              properties:
                error:
                  type: string
                  description: Error message
                  example: "Access denied"
    security: []  # No security required for login endpoint
